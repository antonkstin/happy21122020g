// block1 -------------------------
(function() {
const messages = {
  start: [
    '–ï—Å–ª–∏ —Ç—ã —á–∏—Ç–∞–µ—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ,',
    '–ó–Ω–∞—á–∏—Ç —Ç–µ–±–µ —É–∂–µ –∏—Å–ø–æ–Ω–∏–ª–æ—Å—å —Ü–µ–ª—ã—Ö <br>22 –≥–æ–¥–∏–∫–∞',
    '–Ø, –∫–æ—Ç–∏–∫ –ú—É—Ä–∑–∏–∫, <br>üò∏',
    '–û—Ç –≤—Å–µ–π –¥—É—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è',
    '–° –î–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! <br>‚úåÔ∏è',
    '–°–µ–≥–æ–¥–Ω—è, –º–Ω–µ –Ω—É–∂–Ω–∞ —Ç–≤–æ—è –ø–æ–º–æ—â—å',
    '–õ–∞–∑–∞—è –≤ –∫–ª–∞–¥–æ–≤–∫–µ, —è –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –∫–∞—Ä—Ç—É —Å–æ–∫—Ä–æ–≤–∏—â',
    '–ù–æ —Å–æ–≤—Å–µ–º –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –Ω–∞ –Ω–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ',
    '–¢—ã –≤–µ–¥—å –º–Ω–µ –ø–æ–º–æ–∂–µ—à—å?',
  ],

  choose: [
    '–§—É—Ö...—Ö–æ—Ä–æ—à–æ, —á—Ç–æ —Ç—ã –Ω–µ –Ω–∞–∂–∞–ª–∞ –ù–ï–¢))',
    '–ù—É —Ç—ã –¥–∞–µ—à—å...—Ç–µ–±–µ –Ω–∏ —á—É—Ç–æ—á–∫–∏ –Ω–µ –±—ã–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ? <br>üëé',
  ],

  end: [
    '–í –ø–æ–∏—Å–∫–µ –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å! –ù—É-–∫–∞ –ø—Ä–æ—è–≤–∏ —Å–µ–±—è:'
  ]

}

let counter = 0; 

const block1 = document.querySelector('.block1');
const titleBLock = block1.querySelector('.block__title');
const buttonsBlock = block1.querySelector('.buttons');
const blockPrompt = block1.querySelector('.block__prompt');
const blockInputs = block1.querySelector('.block__inputs');
const inputs = blockInputs.querySelectorAll('.block__input');

const block2 = document.querySelector('.block2');







const handlerClickScreen = (event) => {

  if ( counter < messages.start.length ) {

    if ( counter === 0 ) {

      blockPrompt.style.opacity = '0';
  
    } 
  
    
    else if ( counter === messages.start.length - 1 ) {
  
      block1.removeEventListener('click', handlerClickScreen);
  
      setTimeout(() => {
        titleBLock.textContent.match('–ó–∞–ø–∞–¥–µ') ? '' : buttonsBlock.style = 'opacity: 1; pointer-events: all';
      }, 1500);
  
    }

    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.start[ counter ] || '–¢—ã —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –∫–ª–∏–∫–µ—Ä –Ω–∞ –î–∏–∫–æ–º –ó–∞–ø–∞–¥–µ <br> O_o <br> –ö–ª–∏–∫–∞–π, –ø–∂–∞–∞–∞–ª—Å—Ç–∞ –ø–æ–º–µ–¥–ª–µ–Ω–Ω–µ–µ, –∞ —Ç–æ —Å–∫—Ä–∏–ø—Ç—ã –Ω–µ —É—Å–ø–µ–≤–∞—é—Ç –∑–∞ —Ç–æ–±–æ–π –º—É—Ä—Ä—Ä—Ä—Ä';
      titleBLock.style.opacity = 1;
  
      counter++;
  
    }, 500);

  } else {

    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.end[ 0 ];
      titleBLock.style.opacity = 1;  
    }, 500);



    block1.removeEventListener('click', handlerClickScreen);

    setTimeout(() => {

      blockInputs.style = 'opacity: 1; pointer-events: all';

    }, 1000);


  }

};



// –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
block1.addEventListener('click', handlerClickScreen);

buttonsBlock.addEventListener('click', (event) => {
  if ( event.target.classList.contains('buttons__button_yes') ) {
    
    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.choose[0];
      titleBLock.style.opacity = 1;

      block1.addEventListener('click', handlerClickScreen);
    }, 500);
    
  } else if ( event.target.classList.contains('buttons__button_no') ) {
    
    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.choose[1];
      titleBLock.style.opacity = 1;

      blockPrompt.textContent = '...–∏–ª–∏ —Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ç–∞–∫ –Ω–∞–∂–∞–ª–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á–∞—Å—Ç—å –ø–∞—Ä–æ–ª—è?';

      setTimeout(() => {
        blockPrompt.style.opacity = '1';
      }, 5000);

    }, 500);
   
  }

  buttonsBlock.style.display = 'none';

});


blockInputs.addEventListener('input', (event) => {

  if ( event.target !== inputs[2]) {

    event.target.nextElementSibling.focus();

  } else {

    if ( inputs[0].value == 1 && inputs[1].value == 2 && inputs[2].value == 5) {

      block1.style = 'display: none';
      block2.style = 'opacity: 1; pointer-events: all; position: static';

    } else {

      blockPrompt.innerHTML = '–ú—è—É–æ—à–∏–±–∫–∞. –ü–æ–º–Ω–∏—à—å: *–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å*';
      blockPrompt.style = 'opacity: 1; color: red; font-weight: 400';

      setTimeout(() => {

        blockPrompt.innerHTML = '–ß—Ç–æ —è —É–∂–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª –¥–ª—è —Ç–µ–±—è??';

        setTimeout(() => {

          blockPrompt.innerHTML = '(–ø–∞–ª—å—á–∏–∫–∏ –æ–±–ª–∏–∂–µ—à—å)';

        }, 40000);

      }, 40000);

    }

  }

});
inputs.forEach((item) => {
  item.addEventListener('focus', () => {
    item.value = '';
  });
});

})();
// block1 -------------------------