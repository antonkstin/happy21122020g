// block1 -------------------------

const messages = {
  start: [
    '–ï—Å–ª–∏ —Ç—ã —á–∏—Ç–∞–µ—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ,',
    '–ó–Ω–∞—á–∏—Ç —Ç–µ–±–µ —É–∂–µ –∏—Å–ø–æ–Ω–∏–ª–æ—Å—å —Ü–µ–ª—ã—Ö <br>22 –≥–æ–¥–∞',
    '–Ø, –º–∏—Å—Ç–µ—Ä –°—É–±–µ—Ä, <br>–æ—Ç –≤—Å–µ–π –¥—É—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è',
    '–° –î–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è! <br>‚úåÔ∏è',
    '–°–µ–≥–æ–¥–Ω—è, —è –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª —Ç–µ–±–µ –º–∞–ª–µ–Ω—å–∫–∏–π –∫–≤–µ—Å—Ç',
    '–ì–æ—Ç–æ–≤–∞ –ª–∏ —Ç—ã –µ–≥–æ –ø—Ä–æ–π—Ç–∏?',
  ],

  choose: [
    '–§—É—Ö...—Ö–æ—Ä–æ—à–æ, —á—Ç–æ —Ç—ã –Ω–µ –Ω–∞–∂–∞–ª–∞ –ù–ï–¢))',
    '–ù—É —Ç—ã –¥–∞–µ—à—å...—Ç–µ–±–µ –Ω–∏ —á—É—Ç–æ—á–∫–∏ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ? <br>üëé',
  ],

  end: [
    '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–µ –≤–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å'
  ]

}

let counter = 0; 

const block1 = document.querySelector('.block1');
const titleBLock = block1.querySelector('.block__title');
const buttonsBlock = block1.querySelector('.buttons');
const blockPrompt = block1.querySelector('.block__prompt');
const blockInputs = block1.querySelector('.block__inputs');
const inputs = blockInputs.querySelectorAll('.block__input');

const block2 = document.querySelector('.block2');







const handlerClickScreen = (event) => {

  if ( counter < messages.start.length ) {

    if ( counter === 0 ) {

      blockPrompt.style.opacity = '0';
  
    } 
  
    
    else if ( counter === messages.start.length - 1 ) {
  
      block1.removeEventListener('click', handlerClickScreen);
  
      setTimeout(() => {
        titleBLock.textContent.match('–¢—ã') ? '' : buttonsBlock.style = 'opacity: 1; pointer-events: all';
      }, 1500);
  
    }

    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.start[ counter ] || '–¢—ã —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π –∫–ª–∏–∫–µ—Ä –Ω–∞ –î–∏–∫–æ–º –ó–∞–ø–∞–¥–µ <br> O_o <br> –¢—ã –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –ø–æ–ø–∞—Å—Ç—å —Å—é–¥–∞! –£—Ö–æ–¥–∏!';
      titleBLock.style.opacity = 1;
  
      counter++;
  
    }, 500);

  } else {

    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.end[ 0 ];
      titleBLock.style.opacity = 1;  
    }, 500);



    block1.removeEventListener('click', handlerClickScreen);

    setTimeout(() => {

      blockInputs.style = 'opacity: 1; pointer-events: all';

      setTimeout(() => {
        blockPrompt.textContent = '(–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)';
        blockPrompt.style.opacity = '1';
      }, 10000);

    }, 1000);


  }

};



// –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
block1.addEventListener('click', handlerClickScreen);

buttonsBlock.addEventListener('click', (event) => {
  if ( event.target.classList.contains('buttons__button_yes') ) {
    
    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.choose[0];
      titleBLock.style.opacity = 1;

      block1.addEventListener('click', handlerClickScreen);
    }, 500);
    
  } else if ( event.target.classList.contains('buttons__button_no') ) {
    
    titleBLock.style.opacity = 0;

    setTimeout(() => {
      titleBLock.innerHTML = messages.choose[1];
      titleBLock.style.opacity = 1;

      blockPrompt.textContent = '...–∏–ª–∏ —Ç—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ç–∞–∫ –Ω–∞–∂–∞–ª–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á–∞—Å—Ç—å –ø–∞—Ä–æ–ª—è?';

      setTimeout(() => {
        blockPrompt.style.opacity = '1';
      }, 5000);

    }, 500);
   
  }

  buttonsBlock.style.display = 'none';

});


blockInputs.addEventListener('input', (event) => {

  if ( event.target !== inputs[2]) {

    event.target.nextElementSibling.focus();

  } else {

    if ( inputs[0].value == 1 && inputs[1].value == 2 && inputs[2].value == 5) {

      block1.style = 'opacity: 0; pointer-events: none';
      block2.style.display = 'opacity: 1; pointer-events: all';

    } else {

      blockPrompt.innerHTML = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å';
      blockPrompt.style = 'opacity: 1; color: red; font-weight: 400';

      setTimeout(() => {
        blockPrompt.innerHTML = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å<br>(–ø–∞–ª—å—á–∏–∫–∏ –æ–±–ª–∏–∂–µ—à—å)';
      }, 40000);

    }

  }

});
inputs.forEach((item) => {
  item.addEventListener('focus', () => {
    item.value = '';
  });
});

// block1 -------------------------